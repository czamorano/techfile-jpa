<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.imerso</groupId>
	<artifactId>techfile-jpa</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>techfile-jpa</name>
	<description>modelo de datos del fichero t√©cnico</description>


	<issueManagement>
		<system>trac</system>
		<url>http://pruldap/tracdesarrollo/ficherotecnico</url>
	</issueManagement>

	<scm>
		<connection>scm:svn:http://pruldap/tracdesarrollo/ficherotecnico/browser/trunk/ficherotecnico</connection>
		<developerConnection>scm:svn:http://pruldap/tracdesarrollo/pagospnc/browser/trunk/ficherotecnico</developerConnection>
		<url>http://pruldap/tracdesarrollo/ficherotecnico/browser/trunk/ficherotecnico</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>nexus releases</name>
			<url>http://pruldap:8080/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>nexus snapshots</name>
			<url>http://pruldap:8080/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<context-root>techfile</context-root>
		<!-- Explicitly declaring the source encoding eliminates the following message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>

		<!-- Define the version of the JBoss BOMs we want to import to specify tested stacks. -->
		<version.jboss.bom.eap>7.0.0.GA</version.jboss.bom.eap>

		<!-- other plug-in versions -->
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.surefire.plugin>2.16</version.surefire.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>

		<javax.faces.PROJECT_STAGE>Production</javax.faces.PROJECT_STAGE>
		<facelets.DEVELOPMENT>Production</facelets.DEVELOPMENT>
		<facelets.REFRESH_PERIOD>5</facelets.REFRESH_PERIOD>
		<weld.DEVELOPMENT>true</weld.DEVELOPMENT>

		<!-- other plugin versions -->
		<version.source.plugin>3.0.1</version.source.plugin>
		<version.javadoc.plugin>2.10.4</version.javadoc.plugin>

		<!-- DeltaSpike -->
		<deltaspike.version>1.8.1</deltaspike.version>

		<!-- faces -->
		<version.richfaces>4.5.12.Final</version.richfaces>
		<version.bootsfaces>1.2.0</version.bootsfaces>
		<version.primefaces>6.1</version.primefaces>
		<version.primefaces.themes>1.0.10</version.primefaces.themes>
		<version.omnifaces>2.6.9</version.omnifaces>



		<version.commons-lang>2.6.0.redhat-6</version.commons-lang>
		<version.commons-lang3>3.7</version.commons-lang3>
		<version.commons-configuration2>2.2</version.commons-configuration2>
		<version.commons-io>2.4.0.redhat-1</version.commons-io>
		<version.commons-beanutils>1.9.2.redhat-1</version.commons-beanutils>
		<version.picketbox>4.9.6.Final-redhat-1</version.picketbox>

		<poi.version>3.9</poi.version>
		<version.itext>2.1.7</version.itext>
		<version.jackson>2.5.4.redhat-1</version.jackson>

		<application_properties>E:/code/proyectos/configuracion</application_properties>

		<!-- persistence.xml -->
		<hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
		<!-- <hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect> -->
		<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
		<hibernate.show_sql>false</hibernate.show_sql>

		<!-- Arquillian -->
		<application_properties>E:/code/proyectos/configuracion</application_properties>
		<arquillian.jboss.home>E:/code/bin/EAP-7.0.0</arquillian.jboss.home>
		<arquillian.jboss.javaVmArguments>-Dapplication_properties=E:/code/proyectos/configuracion
			-agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n
			-Xms1024m -Xmx2048m -XX:MaxPermSize=512m
			-Djava.net.preferIPv4Stack=true</arquillian.jboss.javaVmArguments>


	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- JBoss distributes a complete set of Java EE APIs including a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions of artifacts. Here we use the jboss-eap-javaee7-with-tools stack (you can read 
				this as the JBoss stack of the Java EE APIs, with some extras tools for your project, such as Arquillian for testing) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-eap-javaee7-with-tools</artifactId>
				<version>${version.jboss.bom.eap}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<!-- DeltaSpike -->
			<dependency>
				<groupId>org.apache.deltaspike.distribution</groupId>
				<artifactId>distributions-bom</artifactId>
				<version>${deltaspike.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>


			<!-- RichFaces BOM Import -->
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-build</artifactId>
				<version>${version.richfaces}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>net.bootsfaces</groupId>
				<artifactId>bootsfaces</artifactId>
				<version>${version.bootsfaces}</version>
			</dependency>
			<dependency>
				<groupId>org.primefaces</groupId>
				<artifactId>primefaces</artifactId>
				<version>${version.primefaces}</version>
			</dependency>
			<dependency>
				<groupId>org.primefaces.themes</groupId>
				<artifactId>all-themes</artifactId>
				<version>${version.primefaces.themes}</version>
			</dependency>
			<dependency>
				<groupId>org.omnifaces</groupId>
				<artifactId>omnifaces</artifactId>
				<version>${version.omnifaces}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${version.jackson}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${version.jackson}</version>
				<scope>provided</scope>
			</dependency>


			<!-- WELD -->
			<!-- <dependency> -->
			<!-- <groupId>org.jboss.weld</groupId> -->
			<!-- <artifactId>weld-api</artifactId> -->
			<!-- <version>2.3.0.SP1-redhat-1.jar</version> -->
			<!-- <scope>provided</scope> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.jboss.weld</groupId> -->
			<!-- <artifactId>weld-core</artifactId> -->
			<!-- <version>2.3.3.Final-redhat-1</version> -->
			<!-- <scope>provided</scope> -->
			<!-- </dependency> -->
			<!-- <dependency> -->
			<!-- <groupId>org.jboss.weld</groupId> -->
			<!-- <artifactId>weld-spi</artifactId> -->
			<!-- <version>2.3.0.SP1-redhat-1</version> -->
			<!-- <scope>provided</scope> -->
			<!-- </dependency> -->



			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.commons-lang3}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-configuration2</artifactId>
				<version>${version.commons-configuration2}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${version.commons-beanutils}</version>
				<!-- <scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons-io}</version>
				<scope>provided</scope>
			</dependency>

			<!-- POI: EXCEL -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi.version}</version>
			</dependency>

			<!-- iText -->
			<dependency>
				<groupId>com.lowagie</groupId>
				<artifactId>itext</artifactId>
				<version>${version.itext}</version>
			</dependency>






			<!-- PicketBox -->
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>authorization-spi</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>acl-spi</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>common-spi</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>identity-spi</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>jbosssx-bare</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>picketbox-acl-impl</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>picketbox-bare</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>picketbox-identity-impl</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.picketbox</groupId>
				<artifactId>picketbox-spi-bare</artifactId>
				<version>${version.picketbox}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.5-redhat-1</version>
				<scope>provided</scope>
			</dependency>

			<!-- Arquillian -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.5.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>




		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- First declare the APIs we depend on and need for compilation. All of them are provided by JBoss EAP -->

		<!-- Import the Batch API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.batch</groupId>
			<artifactId>jboss-batch-api_1.0_spec</artifactId>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in JBoss EAP -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Bean Validation Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss EAP -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- Import the JAX-RS API, we use provided scope as the API is included in EAP -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<!-- Annotation processor to generate the JPA metamodel classes for typesafe criteria queries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Annotation processor that raising compilation errors whenever constraint annotations are incorrectly used. -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- DeltaSpike -->
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<scope>runtime</scope>
		</dependency>



		<!-- faces -->
		<dependency>
			<groupId>org.richfaces</groupId>
			<artifactId>richfaces</artifactId>
		</dependency>
		<dependency>
			<groupId>net.bootsfaces</groupId>
			<artifactId>bootsfaces</artifactId>
		</dependency>
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
		</dependency>
		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
		</dependency>


		<!-- WELD -->
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.weld</groupId> -->
		<!-- <artifactId>weld-api</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.weld</groupId> -->
		<!-- <artifactId>weld-core</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.weld</groupId> -->
		<!-- <artifactId>weld-spi</artifactId> -->
		<!-- </dependency> -->


		<!-- APACHE COMMONS -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- POI: EXCEL -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-codec</groupId>
					<artifactId>commons-codec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
		</dependency>

		<!-- iText -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
		</dependency>

		<!-- AUTORIZACION -->
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>authorization-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>acl-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>common-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>identity-spi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>jbosssx-bare</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox-acl-impl</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox-bare</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox-identity-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox-spi-bare</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<finalName>${context-root}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- The JBoss AS plugin deploys your ear to a local JBoss EAP container -->
			<!-- Due to Maven's lack of intelligence with EARs we need to configure the jboss-as maven plugin to skip deployment for all modules. We then enable 
				it specifically in the ear module. -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss.maven.plugin}</version>
				<inherited>true</inherited>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${version.javadoc.plugin}</version>
				<configuration>
					<skip>true</skip>
					<doclet>org.jboss.apiviz.APIviz</doclet>
					<docletArtifact>
						<groupId>org.jboss.apiviz</groupId>
						<artifactId>apiviz</artifactId>
						<version>1.3.2.GA</version>
					</docletArtifact>
					<useStandardDocletOptions>true</useStandardDocletOptions>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
					<docencoding>UTF-8</docencoding>
					<breakiterator>true</breakiterator>
					<version>true</version>
					<author>true</author>
					<keywords>true</keywords>
					<additionalparam>-sourceclasspath
						${project.build.outputDirectory}</additionalparam>
					<!-- <stylesheetfile>${project.parent.parent.basedir}/javadoc/stylesheet.css</stylesheetfile> -->
					<javadocDirectory>${project.parent.parent.basedir}/javadoc</javadocDirectory>
					<!-- <reportOutputDirectory>${project.basedir}/myoutput</reportOutputDirectory> -->
					<destDir>apidocs</destDir>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>



	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.surefire.plugin}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
